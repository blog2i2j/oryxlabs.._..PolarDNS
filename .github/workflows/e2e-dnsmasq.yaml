name: E2E Dnsmasq
on:
  - workflow_dispatch
jobs:
  tests:
    runs-on: [linux, self-hosted]
    strategy:
      matrix:
        version:
          - "latest"
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEV_AWS_ECR_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEV_AWS_ECR_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.DEV_AWS_ECR_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - uses: actions/checkout@v4

      - name: Run Dnsmasq
        run: |
          docker run --name dnsmasq -p 10053:53/udp -p 10053:53/tcp -d -e "DNS1=192.168.0.11" -e "DNS2=192.168.0.11" dockurr/dnsmasq:${{ matrix.version }}
          sleep 10

      - name: Run PolarDNS
        uses: ./.github/actions/run-polardns
        with:
          resolver: dnsmasq

      - name: Run E2E tests
        uses: ./.github/actions/e2e-tests
        continue-on-error: true

      - name: Collect Docker logs
        run: |
          mkdir -p test-e2e/debug
          docker ps -a >test-e2e/debug/docker.log

      - name: Collect Dnsmasq logs
        run: |
          docker logs dnsmasq >test-e2e/debug/dnsmasq.log

      - name: Collect PolarDNS logs
        run: |
          docker logs polardns >test-e2e/debug/polardns.log

      - name: Compress test results
        run: tar -czf test-e2e-results-dnsmasq-${{ matrix.version }}.tar.gz -C test-e2e .

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          path: test-e2e-results-dnsmasq-${{ matrix.version }}.tar.gz
          name: test-e2e-results-dnsmasq-${{ matrix.version }}
          if-no-files-found: ignore

