[module]
name = "htchain"
type = "feature"
info = "HTTPS alias chain"
desc = "Respond with an incremented HTTPS record. This creates an infinite alias chain."
author = "ivan.jedek@oryxlabs.com"
category = "Aliases, loops and chains"

code = '''
           elif req.first_subdomain.startswith("htchain"):
              # Send incremented HTTPS alias (RFC 9460).
              new_domain_name = increment_chain(req.full_domain)
              ### DNS header ########
              buffer = prep_dns_header(b'\x84\x00', req.QURR, 1, 0, 0)
              ### QUESTION SECTION ########
              if resp.noq: buffer += convDom2Bin(req.full_domain) + req.type_bin + req.class_bin
              ### ANSWER SECTION ########
              # HTTPS alias record
              bindom = convDom2Bin(new_domain_name)
              data_len = 2+len(bindom)  # SvcPriority (2 bytes) + the target name
              buffer += b'\xc0\x0c' if resp.compress else convDom2Bin(req.full_domain)
              buffer += getTypeBin("HTTPS") + getClassBin("IN")
              buffer += struct.pack(">L", resp.TTL)    ## TTL
              buffer += struct.pack(">H", data_len)    ## Data length
              buffer += struct.pack(">H", 0)           ## SvcPriority (0 means alias mode - RFC 9460)
              buffer += bindom                         ## TargetName
              # log and send
              log("HTTPS %s" % (new_domain_name))
              send_buf(self, buffer)
              #####################################################################
'''
