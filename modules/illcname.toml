[module]
name = "illcname"
type = "feature"
info = "Illegal CNAME formats"
desc = "Respond with CNAME alias containing a hostname in an illegal form e.g. containing an IP address, a port number or an URL, based on the selected variant."
author = "ivan.jedek@oryxlabs.com"
category = "CNAME fuzzing"

code = '''
if req.first_subdomain.startswith("illcname"):
   # Send illegal CNAME record of various schemes
   r = '{:06d}'.format(random.getrandbits(20) % 1000000)
   variant = 0
   if req.subdomains[1].isnumeric():
      variant = int(req.subdomains[1])
   match variant:
      case 1:  # illcname.0 - http://always123456.yourdomain.com/
         dom = "http://always" + r + "." + req.sld_tld_domain + "/"
      case 2:  # illcname.1 - http://always123456.yourdomain.com:80/
         dom = "http://always" + r + "." + req.sld_tld_domain + ":80/"
      case 3:  # illcname.2 - https://always123456.yourdomain.com/
         dom = "https://always" + r + "." + req.sld_tld_domain + "/"
      case 4:  # illcname.3 - https://always123456.yourdomain.com:443/
         dom = "https://always" + r + "." + req.sld_tld_domain + ":443/"
      case 5:  # illcname.4 - always123456.yourdomain.com:80
         dom = "always" + r + "." + req.sld_tld_domain + ":80"
      case 6:  # illcname.5 - always123456.yourdomain.com:443
         dom = "always" + r + "." + req.sld_tld_domain + ":443"
      case 7:  # illcname.6 - 1.2.3.4 (in DNS name notation as 4 labels)
         dom = "1.2.3.4"
      case 8:  # illcname.7 - 1.2.3.4:80 (in DNS name notation as 4 labels)
         dom = "1.2.3.4:80"
      case 9:  # illcname.8 - 1.2.3.4 (in DNS name notation as 1 label)
         dom = "1<DOT>2<DOT>3<DOT>4"
      case 10:  # illcname.9 - 1.2.3.4:80 (in DNS name notation as 1 label)
         dom = "1<DOT>2<DOT>3<DOT>4:80"
      case 11:  # illcname.10 - <OUR-IP-ADDRESS> (in DNS name notation as 4 labels)
         ourip = ZONEFILE["ns1." + req.sld_tld_domain]["A"]
         dom = ourip
      case _:  # illcname.11 - <OUT-IP-ADDRESS>:80 (in DNS name notation as 4 labels)
         ourip = ZONEFILE["ns1." + req.sld_tld_domain]["A"]
         dom = ourip + ":80"
   ### DNS header #######
   buffer = prep_dns_header(b'\x84\x00', req.QURR, 1, 0, 0)
   ### QUESTION SECTION ########
   if resp.noq: buffer += convDom2Bin(req.full_domain) + req.type_bin + req.class_bin
   ### ANSWER SECTION ########
   bindom = convDom2Bin(dom)
   buffer += b'\xc0\x0c' if resp.compress else convDom2Bin(req.full_domain)
   buffer += getTypeBin("CNAME") + getClassBin("IN")
   buffer += struct.pack(">L", resp.TTL)          ## TTL
   buffer += struct.pack(">H", len(bindom))       ## Data length
   buffer += bindom                               ## CNAME
   # log and send
   log("CNAME %s" % (dom))
   send_buf(self, buffer)
   #####################################################################
'''
