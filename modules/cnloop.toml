[module]
name = "cnloop"
type = "feature"
info = "CNAME alias loop"
desc = "Respond with CNAME record forming an infinite loop consisting of any number of elements."
author = "ivan.jedek@oryxlabs.com"
category = "Aliases, loops and chains"

code = '''
if req.first_subdomain.startswith("cnloop"):
   # Do a CNAME loop
   if req.subdomains[1].isnumeric() and req.subdomains[2].isnumeric():
      # we are already in a loop, e.g.:
      # cnloop.10.4.yourdomain.com
      max = int(req.subdomains[1])
      cur = int(req.subdomains[2])
      if cur >= max:
         # go back to the beginning of the loop
         new_domain_name = req.subdomains[0] + "." + str(max) + ".1"
      else:
         # increment the current index
         new_domain_name = req.subdomains[0] + "." + str(max) + "." + str(cur+1)
      for i in range(len(req.subdomains)-3):
         new_domain_name += "." + req.subdomains[i+3]
   elif req.subdomains[1].isnumeric():
      # we are in beginning of a loop with a requested max value, e.g.:
      # cnloop.10.yourdomain.com
      max = int(req.subdomains[1])
      if max < 1:
         max = 1
      new_domain_name = req.subdomains[0] + "." + str(max) + "." + "1"
      for i in range(len(req.subdomains)-2):
         new_domain_name += "." + req.subdomains[i+2]
   else:
      # just immediate loop
      new_domain_name = req.full_domain
   ### DNS header ########
   buffer = prep_dns_header(b'\x84\x00', req.QURR, 1, 0, 0)
   ### QUESTION SECTION ########
   if resp.noq: buffer += convDom2Bin(req.full_domain) + req.type_bin + req.class_bin
   ### ANSWER SECTION ########
   # CNAME
   buffer += b'\xc0\x0c' if resp.compress else convDom2Bin(req.full_domain)
   buffer += getTypeBin("CNAME") + getClassBin("IN")
   buffer += struct.pack(">L", resp.TTL)                    ## TTL
   buffer += struct.pack(">H", len(new_domain_name)+2)      ## Data length
   buffer += convDom2Bin(new_domain_name)                   ## CNAME value
   # log and send
   log("CNAME LOOP %s" % (new_domain_name))
   send_buf(self, buffer)
   #####################################################################
'''
